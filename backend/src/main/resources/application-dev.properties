# Development Profile Configuration
# Server configuration
server.port=8080

# Database configuration
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:bookstore_db}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP settings optimized for development
spring.datasource.hikari.pool-name=BookstoreHikariCP-Dev
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.max-lifetime=1800000

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.open-in-view=false

# Flyway configuration
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# Actuator configuration - expanded for development
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,loggers,httpexchanges,mappings,configprops,beans,conditions,flyway,liquibase,bookstats
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true

# Info endpoint configuration
management.info.build.enabled=true
management.info.git.enabled=true
management.info.git.mode=full
management.info.env.enabled=true
management.info.java.enabled=true

# Metrics configuration
management.metrics.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=30s
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.slo.http.server.requests=10ms,50ms,100ms,200ms,500ms,1s,2s,5s
management.metrics.tags.application=bookstore-backend
management.metrics.tags.environment=development
management.metrics.tags.version=1.0.0

# Health check intervals
management.health.diskspace.threshold=10MB
management.endpoint.health.cache.time-to-live=10s

# Security for actuator endpoints
management.endpoints.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173
management.endpoints.web.cors.allowed-methods=GET,POST

# Custom info endpoint properties
info.app.name=Bookstore Backend API
info.app.description=A comprehensive bookstore management system with Spring Boot (Development)
info.app.version=1.0.0
info.app.encoding=UTF-8
info.app.java.version=21
info.app.features.books=CRUD operations for book management
info.app.features.search=Advanced search capabilities
info.app.features.monitoring=Comprehensive monitoring and metrics
info.app.features.health=Custom health indicators

# Detailed logging for development
logging.level.com.example.bookstore=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File logging
logging.file.name=logs/bookstore-dev.log
logging.file.max-size=50MB
logging.file.max-history=10

# CORS configuration - permissive for development
app.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:5173
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Origin,Content-Type,Accept,Authorization,X-Requested-With,Cache-Control
app.cors.exposed-headers=X-Total-Count,X-Page-Count
app.cors.allow-credentials=true
app.cors.max-age=3600

# Security configuration - relaxed for development
app.security.enable-csrf=false
app.security.public-endpoints=/api/books/**,/api/health,/swagger-ui/**,/api-docs/**,/actuator/**
app.security.content-security-policy=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'
app.security.referrer-policy=strict-origin-when-cross-origin
app.security.permissions-policy=geolocation=(), microphone=(), camera=(), payment=(), usb=()

# OpenAPI/Swagger configuration
app.openapi.dev-url=http://localhost:8080
app.openapi.prod-url=
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Development-specific settings
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.add-properties=true
spring.h2.console.enabled=false