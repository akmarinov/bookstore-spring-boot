spring:
  datasource:
    url: jdbc:mysql://localhost:3306/booksdb?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
    # Production-optimized HikariCP settings
    hikari:
      pool-name: BookstoreHikariCP-Prod
      maximum-pool-size: 30
      minimum-idle: 10
      idle-timeout: 600000
      connection-timeout: 30000
      leak-detection-threshold: 60000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
      register-mbeans: true
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    show-sql: false
    open-in-view: false
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: false
    validate-on-migrate: true
    out-of-order: false
    clean-disabled: true
    
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  http2:
    enabled: true
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,bookstats
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      show-components: always
      cache:
        time-to-live: 30s
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
      threshold: 100MB
    db:
      enabled: true
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: 60s
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
      percentiles:
        http:
          server:
            requests: 0.5,0.95,0.99
      slo:
        http:
          server:
            requests: 10ms,50ms,100ms,200ms,500ms,1s,2s,5s
    tags:
      application: bookstore-backend
      environment: production
      version: '@project.version@'
        
logging:
  level:
    root: WARN
    com.example.bookstore: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.zaxxer.hikari: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/bookstore-prod.log
    max-size: 100MB
    max-history: 30

# Security configuration for production
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Origin,Content-Type,Accept,Authorization,X-Requested-With
    exposed-headers: X-Total-Count,X-Page-Count
    allow-credentials: true
    max-age: 3600
  security:
    enable-csrf: false
    public-endpoints: /api/books/**,/api/health,/actuator/health
    content-security-policy: "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests"
    referrer-policy: strict-origin-when-cross-origin
    permissions-policy: "geolocation=(), microphone=(), camera=(), payment=(), usb=(), fullscreen=(), accelerometer=(), gyroscope=(), magnetometer=()"